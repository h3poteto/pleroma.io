name: Release

on:
  push:
    branches: [ "master" ]

env:
  ECR_PHOENIX: 564677439943.dkr.ecr.ap-northeast-1.amazonaws.com/h3poteto/pleroma/phoenix
  ECR_NGINX: 564677439943.dkr.ecr.ap-northeast-1.amazonaws.com/h3poteto/pleroma/nginx

jobs:
  build_phoenix:
    name: Phoenix docker build
    runs-on: ubuntu-latest


    steps:
      - uses: actions/checkout@v3
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to ECR
        uses: docker/login-action@v2
        with:
          registry: 564677439943.dkr.ecr.ap-northeast-1.amazonaws.com
          username: ${{ secrets.AWS_ACCESS_KEY_ID }}
          password: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.ECR_PHOENIX }}
          tags: |
            type=sha
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: dockerfiles/phoenix/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  build_nginx:
    name: Nginx docker build
    runs-on: ubuntu-latest


    steps:
      - uses: actions/checkout@v3
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to ECR
        uses: docker/login-action@v2
        with:
          registry: 564677439943.dkr.ecr.ap-northeast-1.amazonaws.com
          username: ${{ secrets.AWS_ACCESS_KEY_ID }}
          password: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.ECR_NGINX }}
          tags: |
            type=sha
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v3
        with:
          context: dockerfiles/nginx/
          file: dockerfiles/nginx/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  release:
    name: Create release PR
    needs: [build_phoenix, build_nginx]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Install hub
        run: |
          curl -sSLf https://github.com/github/hub/releases/download/v2.14.2/hub-linux-amd64-2.14.2.tgz | \
          tar zxf - --strip-components=1 -C /tmp/ && \
          sudo mv /tmp/bin/hub /usr/local/bin/hub
          hub --version
      - name: Install kustomize
        run: |
          curl -sSLf https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize%2Fv4.5.7/kustomize_v4.5.7_linux_amd64.tar.gz | \
          tar zxf - -C /tmp/ && \
          sudo mv /tmp/kustomize /usr/local/bin/kustomize
          kustomize version
      - name: Update tag and create PR
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        run: |
          git config --global user.name h3poteto
          git config --global user.email ${{ secrets.EMAIL }}
          git clone https://h3poteto:${{ secrets.TOKEN }}@github.com/h3poteto/k8s-services.git
          cd k8s-services
          git init
          git checkout -b update-pleromaio-image-${{ github.sha }}
          cd external-prd/pleromaio
          kustomize edit set image "phoenix=${{ env.ECR_PHOENIX }}:${{ github.sha }}"
          kustomize edit set image "nginx=${{ env.ECR_NGINX }}:${{ github.sha }}"
          git add .
          git commit -m "Update docker image for pleromaio to ${{ github.sha }}"
          git push --set-upstream origin update-pleromaio-image-${{ github.sha }}
          hub pull-request -m "[Image update] pleromaio ${{ github.sha }}"
